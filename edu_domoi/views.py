from django.shortcuts import redirect
from django.http import HttpResponse
# здесь описываем возвращаемые ответы (вьюхи)

def redirect_blog(request):
    return redirect("posts_list_url", permanent=True)

'''
    Существует два типа редиректов:
    301-ый, постоянный
    302-ой, временный

    сделать мы хотим его постоянным.

    Для создания системы пользователей, стоит начать с
    создания суперюзера, делается это через manage.py,
    createsuperuser

    После того, как мы залогинимся на узле admin,
    он останется в куки файлах.

    Чтобы спрятать ту самую панельку от пользователя,
    достаточно изменить вьюшку.
    Как сделаем это мы? Воспользуемся параметрами
    request, а именно is_authenticated и is_stuff
    то есть залогинился ли юзер и админ ли он
    я во внутрь этих блоков просто запихал всю админскую панель
    В базовом шаблоне
    Наверно, так делать хорошо.

    Да, но это лишь убирает отображение элементов.
    Но у нас ведь остались ссылки!
    Доступ к ним ограничивается с помощью миксинов, как правило.
    Почему не декораторы? Потому-что мы уже заюзали классы, нам
    остаётся только настроить наследование от нужных миксинов
    У джанго уже реализован такой миксин!
    Юзаем from django.contrib.auth.mixins import LoginRequiredMixin
    Мешаем его в те вьюхи, которые считаем

    Эти миксины предоставляют разные способы пресечения.
    Мы можем или возбуждать исключения, или делать редирект на
    страницу логина, например.
    Мы же просто выдадим ошибку 403.
    нам достаточно будет переопределить у миксина
    свойство raise_exception и присвоить ему True
'''